안녕하세요. 이번 시간에는 실패는 우리를 단련시켜준다는 주제로 얘기를 해보도록 하겠습니다.
개발자에게 실패는 항상 곁에 있어요. 
왜 그러냐면 아무리 개발을 잘한다고 하는 분들도 대부분 버고치는 데 시간을 많이 쓰거든요.
 완벽한 프로그램도 없고 유명한 오픈 소스 같은 경우도 기존에 버픽스 하는 게 일반적이고 업데이트 하다 보면 기존에 있던 것과 또 부딪히고 그럼 또 고쳐야 되고 또 고쳐야 되고 또 고쳐야 되고 이게 일반적이에요.
그러다 보니까 개발자는 어쩔 수 없이 어쩔 수 없이

항상 실패를 반복할 수밖에 없는 직업인 것 같아요. 
제가 안타까운 거는 초보자분들 보면 처음에 오셔서 개발 시작할 때 버상황이 발생하면 그때 멤붕 오시는 분들 너무 많아요.
나는 재능이 없나 봐 다른 친구들은 매번 실패하는 거를 서로 보지 않잖아요.
코드 짜다가 실패하는 건 자기 혼자만 마주하잖아요.

이거 버나왔네 하면서 옆에 사람한테 나 버나왔다 이러진 않잖아 사람들이 다른 친구들은 그런 과정이 없을 줄 아는데 다른 분들도 굉장히 그런 실수들을 많이 하고 있거든요.
일반적으로 개발자들이 보통 그런 경우가 굉장히 많기 때문에 개발하실 때 보면 항상 우리가 어떤 개발을 딱 했을 때 항상 버잡는 게 거의 대부분이다.
이런 생각을 해야 되거든요. 그런데 그런 생각들이 경력자분들은 하는데 초보자분들은 진짜 안 하는 것 같아요.

그런데 중요한 거는 이런 거를 처음 마주했을 때 실패에 대한 스트레스 정도가 사람의 성장을 정하는 경우가 많거든요.
 학교 같은 데서도 일반적으로 주입식에 시험하만 보면 끝이잖아 그런 식의 룰이 많다.
보니까 하나 잠깐 못하면 사람들이 맨붕이 금방 오더라고요 사법고시 같은 경우도 한 번 한 번 오래 실패하면 안 되고 그랬었잖아요.
옛날에 공무원 시험도 마찬가지고 그런 식이 되니까 어떤 순간 순발력이 좋고 잘 찍는 사람들한테 좋은 기회가 더 많긴 한 것 같거든요.

실제 진 실력자들은 그런 식으로 해서는 안 되거든요.
저 같은 경우도 제가 뭔가 공부를 할 때 항상 뭐라고 해야 되지 개발 같은 거 할 때도 제가 편해야 잘하는 편이긴 해요.
 학생들도 마찬가지로 제가 어떤 제가 편한 학생들 제가 좋아하는 학생들

그렇게 있으면 항상 수업을 하고 저는 제가 학생들 불편하면 학생들이랑 잘 수업 안 해요.
왜 그러냐면 나가줬으면 좋겠다고 얘기를 해요.
왜 그러냐면 다 그런 건 아니고 제 입장에서 실제로 그렇게 해서 예전에 어떻게 착한 친구이긴 했는데 친구가 오해해서 저한테 세게 얘기를 한 적이 있어요.
오해를 한 거죠.  같이 영상을 보면서 내가 그렇게 한 게 아니다.
그랬더니 친구도 영상을 보고 미안하다고 얘기를 하더라고요 그렇게 해서 친구 왜냐하면 제가 한번 불편하게 시작하면 저는 안 하거든요.
제 인생의 철학이  저는 일단은 어차피 인간은 자기가 잘 먹고 잘 살려고 자기 위주로 생각을 하고 당연히 자기 자신이 영순이어야 하죠.
그게 가장 중요하죠

그런데 저는 제가 영순인데 저한테 그렇게 굉장히 가끔 너무 오해하고 막 그렇게 하는 친구들이 있어요.
제가 사과받을 정도로 세게 얘기를 하긴 했거든요.
친구가  제가 거기서 상처를 받은 거죠.
저는 외부에서 그렇게 욕하는 거에 대해서는 쟤네 열등감 많은가 보다 하면서 우리가 더 열심히 해서 더 고연봉 받아야지 노력하는 어떤 장작으로 그런 걸 쓰지만

반대로 제가 학생들한테 그렇게 하면 타격이 크거든요.
제가 학생들을 좋아하는 만큼 그만큼 제가 아무래도 약점을 약점을 드러내고 있다고 그래야 되나 그런 상태에서 딱 오면 확실히 세거든요.
저도 어떻게 보면 강의하다가 그런 실패들을 맛보는 거죠.

친구가 물론 제가 워딩을 나쁘게 얘기하지는 않았었어요.
그거는 그런 오해가 생긴 거는 친구의 오해이긴 했어요.
실제로 회사 자기 회사를 비하했다.
생각을 하더라고요 그때 제가 어떻게 얘기를 했냐면 친구한테 지금 a 님이 다니시는 a라고 할게요 친구를 a 님이 다니시는 회사도 좋은 분야지만 이런 분야도 있어요.
얘기했거든요.  분야도 좋고 이 분야도 좋다.
얘기를 한 건데 오해를 하신 거죠.

아무튼 그런 케이스 같은 게 어떻게 보면 어떻게 하면 더 좋은 표현을 쓸까 어떻게 하면 더 오해가 안 생기고 학생이 더 집중해서 공부를 할 수 있는 환경을 만들 수 있을까에 대한 실패도 저도 늘 경험을 해요.
가끔 또 재능 있고 괜찮은 친구들이 좌절하고 할 때 이 영상을 만드는 것도 제 실패를 기반으로 해서 설명을 하는 거죠.

왜냐하면 제가 어떤 학생들이 코칭을 했는데 친구들이 디버깅 하는 상황이 나왔어 그거를 버티기가 힘든 거죠.
비트코인에 투자하든 주식에 투자하든 요즘 나스닥도 엄청 떨어지고 비트코인도 엄청 떨어졌잖아요.
떨어지는 상황에 갔으면 보통 사람들이 굉장히 멘탈이 많이 나가거든요.
그거에 준하는 거의 거의 못지 않은 엄청난 스트레스를 받아야 해요.
학생들이 많이 개발하다가 특히나 버같은 게 많아서 안 고쳐질 때 그걸 몇날 며칠 버그만 고치다 보면 내가 재능이 없는 것 같고 굉장히

별로라고 생각하는데 우리 몸이 굳은 살이 베기는 게 생기는 게 아니고 매일매일 달려나다 보면 예를 들어서 철봉 같은 거 하시는 분들 아니면은 쇠질 한다 그러죠 헬스장에서 그런 거 하시는 분들도 바로 구은살이 생기는 게 아니고 하다 보면 생기는 거고 구은살이 생기는 이유는 그곳의 어떤 강도가 강도가 세지는 거죠.
그러다 보면 일을 할 때 아무래도 더 덜 아프게 할 수 있게 되는

그런 효과를 얻을 수가 있는데  헬스 많이 오래 하신 분들 보면 손 보면 까칠까칠한 분들 많거든요.
그런 것처럼 그만큼 어떤 우리 몸이 특정 상황에 적응을 해요.
 옛날에는 당연히 못했던 그런 것들도 실패를 반복하면서 내가 견딜 수 있는 능력이 점점 커지다 보면 어떤 분야든지 더 잘해지거든요.
코딩도 마찬가지예요.

우리 뇌도 특정 상황에 적응을 하려고 하기 때문에 나중에 더 많이 복잡하고 힘들어 보이는 상황에 처해도 더 잘해지는 경우가 많거든요.
 여기서 오해하시는 분들이 단순히 근무 시간을 길게 하는 게 과연 성장의 기본 척도인가 생각하실 수 있는데 그러지는 않고요 근무 시간이 길다라는 거는 실력이 는다라고 보시면 안 해요.
그러면 절대 안 돼요 왜냐하면 의식적인 노력을 하셔야 되거든요. 
지금 내가 된 원인이 무엇이지라는 생각을 해본다든지 어떤 행동에 대한 결과적인 부분에 대한

그런 처리라고 할까나 그런 자아 성찰 이런 것들이 중요해요  어떻게 하면 소비자가 더 좋은 이런 생각을 할 수 있죠 왜냐하면 인간의 사고는 포커싱이 정확하게 돼야 돼요 초점이 정확하게 맞춰 있어서 내가 지금 하는 행위에서 어떤 부분이 중요한지에 대해서 항상 생각이 있고 거기에 대해서 내 움직임이 따라와줘야만 좋은 결과가 나오는 경우가 일반적이거든요.

 어제 내가 개발을 할 때도 마찬가지고 연봉에 초점을 맞추셔도 되고 아니면 우리 회사에서 내가 지금 생산성을 보여주겠다.
아니면 내가 우리 회사 제품을 api화 시켜서 외부에 연결을 하게 해줄 것이다라고 하면 설계 방향부터가 달라지거든요.
좋은 아키텍트라고 하면 결국에는 내 생각이 반영되는 코드를 짤 수 있는 사람이라고 저는 생각을 하는데

그런 분들이 여러분들이 되기 위해서는 제 생각에는 이런 실패를 반복하는 게 제일 빠르게 성장하는 지름길이다라고 말할 수 있다는 것이죠. 
 제가 여러분들한테도 항상 강조하는 의식적인 노력 그런 것들을 항상 신경을 많이 써주셨으면 좋겠고 tlov 커리큘럼도 매년마다 바뀌는 이유가

특히나 응용 2단계쯤에서 많이 바뀌고 기초에서는 많이 바뀌진 않는데 응용 2단계쯤에 올해는 이런 방향성으로 우리가 더 노력을 해볼까 올해는 해볼까라고 매번 바꿔요 이유가 보통은 팀노바에서도 많이 학생들이 겪는 일인데 어떤 친구들 보면 완벽해 보이는 친구들이 있어요.
그러면 제가 친구들을 덜 신경을 쓰거든요.
그러다 보면 어느 순간 이거 정확하지 않은 코칭이었는데 싶을 때가 한 번씩 있어요.
물론 나중에 잘 보정해서 좋게 취업은 다 시켜주긴 하지만 그런 상황들을 줄이면 줄일수록 아무래도 더 안정적이 될 수가 있겠죠.
 그런 식으로 매번 매년 개선을 하다 보니까 더 연봉이 높아지지 않았나 싶어요.
 학생들도 저에 대한 신뢰도도 더 높아지는 코칭을 하다 보니까 결과가 더 좋았겠죠.

저는 그래요 결과를 좋게 하겠다라고 목표를 삼았으면 시장에서 어떤 개발자를 원하는지를 연구하기 시작하거든요.
목적이 그거니까 왜냐하면 시장에서 부가가치가 높은 개발자라고 하는 거는 결국에는 그런 개발자들이 돈이 되는 개발자거든요. 
그러면 연봉이 일단 높으면 그만큼 시장에서 더 희소성 있는 개발자라고 보고 있거든요.
더 좋아하는 개발자일 수도 있고  그런 측면에서의 어떤 제 나름대로의 어떤 뭐라고 그럴까나 그런 거랄까 아무튼 그런 게 있어요.
제 나름대로의 그런 원칙 원칙 같은 게 있는 거죠.
 그런 거를 잘만 지켜줘도 사실은 굉장히 매력적인 개발자를 많이 만들어낼 수 있다고 생각을 해요.
저는  어떤 시장에서 어떤 개발자를 원하는지에 대해서 끊임없이 생각을 해봐야 되는데 우리가 이거를 여러분들 초보자분들이 많으니까 it 업계가 어떤 개발자를 원하는지 그

뽑는 사람 입장에서 잘 생각하기가 힘들어요. 
초보자분들은  경력자라고 해도 그게 쉬우면 저 연봉 개발자는 당연히 없겠죠.
경력만 있으면 다 고연봉 받겠죠. 하지만 고연봉 수요가 있는 개발자들은 보통 정해져 있거든요. 
 물론 그거는 순전히 제 생각이긴 하지만 전 결과로 얘기했으니까  고연봉 수요를 예측하는 게 초보자가 힘들어요.
이거를 가장 지름길로 가는 거는 일단 해도 잘할 수 있는 개발자를 만드는 게 가장 좋아요.

 그런 상황에서 정신적인 무장을 하시고 실패를 반복하시는 게 좋아요.
예를 들어서 내가 어떤 특정 알고리즘을 짜는데 3위를 나를 샜어 나 안 짜죠 그럼 내가 빡대가리 갔잖아요.
그런 노력들의 야근이나 시간은 나중에 점점 여러분들의 사고력을 강화시키는데 그럼 현업에 있는 야근 많이 하시는 분은 어떻게 되냐라고 하는데 보통은 현업에서는 결과를 내야 되기 때문에 현업이고 돈을 받기 때문에 사람들이 야근을 하는데 야근도 이런 야근은 안 돼요 예를 들면 대충 아무거나 복사 붙여넣기 하느라고

복분만 계속 하는 야근 있거든요. 복분만 계속 하는 야근인데 이게 원리를 이해하지 않고 어거지로 될 때까지 붙여 넣을 때 있어요.
저도 어렸을 때 그렇게 많이 해봤는데 그렇게 해서 우연히 돼가지고 그런 어떤 운으로만 계속 이 작업을 하는 건 단순 작업밖에 못할 뿐더러 나중에 아키텍트로 성장도 못하고 연봉도 점점 높아지지도 않아요.

전반적으로 안 좋거든요. 그런 오랜 시간 야근하는 거를 반복하신 분들은 성장 별로 못해요.
중요한 거는 여러분들이 뭔가 뭘 해야 되는지 초점을 맞추고 실패를 반복하는 게 가장 빠르게 성장하는 방법 중 하나예요.
방법만 좋아도 일단은 저를 신뢰하시잖아요.
저는 결과로 얘기하는 사람이니까 저를 믿고 여러분들이 지금 하시는 거에서 명확하게 초점을 몇 개 하나씩 다 맞춰가시면서 실패를 반복하시면 훨씬 좋은 결과가 있으실 거라는 거를 말씀드리고 싶네요.
오늘은 여기까지 하도록 하겠습니다.


